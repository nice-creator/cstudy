运算符
1 算术运算符(+ - * / %)
2 关系运算符(> < == >= <= !=)
3 逻辑运算符(! && ||)
!逻辑非	!0==真	!真==假
C语言中0为假，其他的整数都是真

&& 逻辑与
A&&B	AB同时为真，整个表达式结果为真，AB只要有一个为假，整个表达式为假
逻辑&&的短路特性: A&&B 如果A为假系统不会执行B，这就是逻辑与的短路特性

|| 逻辑或
A||B    只要AB任意一个为真，整个表达式结果为真，AB同时为假的时候，结果才为假
逻辑|| 短路特性: A||B 只要A为真，编译器就不会判断B的真假
——————————————————————————————————————————————————————————————————————————————
4 位运算符(<< >> & | ~ ^)
位运算符都是对8位二进制数进行的操作

&按位与     语法：全1为1，其他为0
举例    1 0 1 0 1 0 1 0
      & 1 1 1 1 0 0 0 0
     -------------------
结果    1 0 1 0 0 0 0 0 
特点：和1相与保持不变，和0相与清零
应用场景：将固定位清零

| 按位或    语法：有1为1 全0才为0
举例    1 0 1 0 1 0 1 0
      | 1 1 1 1 0 0 0 0
      -------------------
结果    1 1 1 1 1 0 1 0
特点：和0相或保持不变，和1相或值为1
应用场景：将固定位置为1

~ 按位取反  语法：0取反是1，1取反是0
应用场景：配合& | 操作

^ 按位异或  语法：相同为0.不同为1
举例    1 0 1 0 0 0 0 0 
     ^  1 1 1 1 0 0 0 0
     ---------------------
        0 1 0 1 0 0 0 0
特点：和0异或保持不变，和1异或取反
应用场景：将固定位发生高低电平翻转

<< 左移运算符，将二进制位向左边移动
语法：左边丢弃(1010 1100 << 3 结果是0110 0000)，右边补零,移动的位数不要超过自身长度

>> 右移运算符
右移分类：逻辑右移 算数右移
    逻辑右移：右边丢弃  左边补0
    算数右移：
        无符号数：右边丢弃  左边补0
        有符号数：
            正数：右边丢弃  左边补0
            负数：右边丢弃  左边补1
右移基本上是右边丢弃，左边补0，只有负数且算术右移，左边才会补1
逻辑右移和算数右移是编译器所决定的，但我们可以检测

5 赋值运算符(=)

6 条件运算符(?:)三目运算符
表达式1？值1:值2
语法：如果表达式1为真，那么整个表达式的值就值1，否则位值2

7 逗号运算符(,)
data1 = 3,4,5,6
data2 =（3,4,5,6）
printf("%d\n",data1) //3
printf("%d\n",data2) //6
---------------------------------------

复合赋值运算符
+=  -=  *=  /=  %=
a+=b;   a=a+b
a*=b;   a=a*b
注意：=号的右边必须看成一个整体

-------------------------------------

++ -- 运算符
++i i=i+1

++i 或 --i 先加减 后使用
i++ 或 i-- 先使用 后加减

